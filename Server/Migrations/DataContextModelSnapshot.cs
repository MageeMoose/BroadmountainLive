// <auto-generated />
using BroadmountainLive.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BroadmountainLive.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BroadmountainLive.Shared.NavImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainNav")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSign")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTopNav")
                        .HasColumnType("bit");

                    b.Property<string>("PathName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NavImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/About me.png",
                            IsExt = false,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "/aboutme",
                            Text = ""
                        },
                        new
                        {
                            Id = 2,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/Cv.png",
                            IsExt = false,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "/cv",
                            Text = ""
                        },
                        new
                        {
                            Id = 3,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/Projects.png",
                            IsExt = false,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "/project",
                            Text = ""
                        },
                        new
                        {
                            Id = 4,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/Skills.png",
                            IsExt = false,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "/skillsandcerts",
                            Text = ""
                        },
                        new
                        {
                            Id = 5,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/GitHub.png",
                            IsExt = true,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "https://github.com/MageeMoose",
                            Text = ""
                        },
                        new
                        {
                            Id = 6,
                            AltText = "",
                            Delay = 0,
                            ImgUrl = "BroadmountainLive/Client/wwwroot/images/Linkedin.png",
                            IsExt = true,
                            IsMainNav = false,
                            IsSign = false,
                            IsTopNav = false,
                            PathName = "https://www.linkedin.com/in/magnus-bredberg-b3684121/",
                            Text = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
